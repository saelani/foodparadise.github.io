{"version":3,"sources":["assets/images/aneka-makanan.png","components/Navbar.js","components/ImageAndWelcome.js","components/CityCard.js","components/CityList.js","components/SearchCity.js","config/api.js","pages/Home.js","components/Footer/Footer.js","components/RatingLabel.js","components/RestaurantProfile.js","components/Review.js","pages/RestaurantDetail.js","components/CategoryList.js","components/SearchKeyword.js","components/SearchCriteria.js","components/RestaurantCard.js","pages/City.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","to","ImageAndWelcome","style","marginBottom","src","mainImage","width","alt","CityCard","props","city","name","county_name","id","_renderCityList","cities","length","map","key","CityList","title","showSubtitle","subTitle","SearchCity","type","placeholder","value","onChange","onClick","onClickSearch","API","baseUrl","api_key","process","Home","getFeaturedCities","url","axios","get","headers","params","city_ids","then","data","status","setState","featuredCities","location_suggestions","catch","err","console","log","changeKeywordHandler","e","keyword","target","searchHandler","state","q","citiesResultSearch","cityKeywordSearch","this","marginTop","Component","Footer","href","RatingLabel","color","backgroundColor","labelColor","borderColor","text","RestaurantProfile","restaurant","fontWeight","location","locality","address","class","featured_image","borderRadius","user_rating","rating_color","aggregate_rating","rating_text","votes","cuisines","currency","average_cost_for_two","Review","border","review","user","profile_image","foodie_level_num","foodie_level","foodie_color","review_time_friendly","rating","review_text","RestaurantDetail","getRestaurantData","restaurant_id","Axios","res_id","apply","getReviwesData","reviews","user_reviews","match","margintop","CategoryList","categories","category","categorySelected","categoryClickHandler","SearchKeyword","onchange","onClickAddToCriteria","SearchCriteria","criteria","cri","index","criteriaName","aria-hidden","removeCriteriaHandler","RestaurantCard","thumb","textDecoration","City","newCriteria","filter","push","addToCriteriaHandler","splice","entity_id","entity_type","restaurants","renderRestaurantList","getCategoriesData","transformCategoriesData","getCityData","city_id","country_name","App","path","exact","component","Boolean","window","hostname","require","config","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.a6a5bc7a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aneka-makanan.87b5f04a.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = () => (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary sticky-top\">\r\n        <Link className=\"navbar-brand\" to=\"/\">FoodParadise</Link>\r\n    </nav>\r\n)\r\n\r\nexport default Navbar","import React from 'react';\r\nimport mainImage from \"../assets/images/aneka-makanan.png\";\r\n\r\nconst ImageAndWelcome = () => (\r\n    <div className=\"container-fluid\">\r\n          <div className=\"row\" style={{ marginBottom: 30 }}>\r\n              <img src={mainImage} width=\"100%\" alt=\"aneka-makanan\"></img>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <div className=\"card text-white bg-success mb-3 text-center\">\r\n                <div className=\"card-header\"><h1>Welcome to FoodParadise</h1></div>\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title\">The Easiest Way to Find Restaurants and Food</h4>\r\n                  <p className=\"card-text\">You can grab information about restaurants, cafees, cuisines with just a few clicks.</p>\r\n                  <p className=\"card-text\">Start by choosing the featured cities below, or search the city name.</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n    </div>\r\n)\r\n\r\nexport default ImageAndWelcome ","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst CityCard = (props) => (\r\n    <div className=\"col-4\">\r\n        <div className=\"card bg-light mb-3\">\r\n            <div className=\"card-body\">\r\n                <h2 className=\"card-title\">{props.city.name}</h2>\r\n                <p>{props.city.county_name}</p>\r\n                <Link to={`/city/${props.city.id}`} className=\"card-text\">See restouran {props.city.name}</Link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default CityCard","import React  from 'react';\r\nimport CityCard from './CityCard'\r\n\r\nconst CityList = (props) => (\r\n    <>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <h3>{props.title}</h3>\r\n            {props.showSubtitle === true && props.subTitle !== ''&&\r\n              <h6 className=\"text-muted\">Search result for keyword '{props.subTitle}'</h6>\r\n            }\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          {props.cities == null ? (\r\n            <div className=\"col\">\r\n              <p> Loading ...</p>\r\n            </div>            \r\n          ) : (\r\n            _renderCityList(props.cities)\r\n          )}\r\n        </div>\r\n    </>\r\n)\r\n\r\n\r\nconst _renderCityList = (cities) => {\r\n  if (cities.length > 0) {\r\n    return (\r\n      cities.map(city => \r\n        <CityCard key={city.id} city={city} />\r\n      )\r\n    )\r\n  } else {\r\n    return (\r\n      <div className=\"col\">\r\n        <p className=\"text-danger\">Data not found</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CityList ","import React from 'react'\r\n\r\nconst SearchCity = (props) => (\r\n    <>\r\n    {/* start of search section */}\r\n    <div className=\"row\" style={{ marginBottom:30 }}>\r\n        <div className=\"col\">\r\n        <h3>SearcCity</h3>\r\n        <div className=\"card\">\r\n            <div className=\"card-body\">\r\n            <div className=\"form-row\">\r\n            <div className=\"col-11\">\r\n                <input \r\n                    className=\"form-control\"\r\n                    type=\"text\"\r\n                    placeholder=\"Type keyword\"\r\n                    value={props.value}\r\n                    onChange={props.onChange}\r\n                />\r\n            </div>\r\n            <div className=\"col-1\">\r\n                <button\r\n                    className=\"btn btn-primary\"\r\n                    type=\"button\"\r\n                    onClick={props.onClickSearch}\r\n                >\r\n                    Search\r\n                </button>\r\n            </div>\r\n            </div>\r\n\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    {/* end of search section */}\r\n    </>\r\n)\r\n\r\nexport default SearchCity ","export const API = {\r\n    zomato: {\r\n        baseUrl: 'https://developers.zomato.com/api/v2.1',\r\n        api_key: process.env.REACT_APP_API_KEY_ZOMATO\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport ImageAndWelcome from '../components/ImageAndWelcome';\r\nimport CityList from '../components/CityList';\r\nimport SearchCity from '../components/SearchCity';\r\nimport axios from 'axios';\r\nimport { API } from '../config/api'\r\n\r\n\r\n/*const citiesDummy = [\r\n    { id: 74, name: 'Jakarta', country_name: 'Indonesia' },\r\n    { id: 11052, name: 'Bandung', country_name: 'Indonesia' },\r\n    { id: 170, name: 'Bali', country_name: 'Indonesia' },\r\n  ]\r\n*/\r\n  \r\nclass Home extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            featuredCities: null,\r\n            citiesResultSearch: null,\r\n            cityKeywordSearch:'',\r\n            keyword:''\r\n        }\r\n      }\r\n    \r\n    componentDidMount() {\r\n        this.getFeaturedCities()\r\n    }\r\n    \r\n    getFeaturedCities = () => {\r\n        var url = `${API.zomato.baseUrl}/cities`\r\n        axios.get(url, {\r\n          headers: {\r\n            'user-key': `${API.zomato.api_key}`\r\n          },\r\n          params: {\r\n            city_ids: '74,11052,170'\r\n          }\r\n          })\r\n          .then(({ data }) => {\r\n            if (data.status === 'success') {\r\n              this.setState({ featuredCities: data.location_suggestions })\r\n            }\r\n          })\r\n          .catch(err => console.log(err))\r\n    }\r\n    \r\n    \r\n    changeKeywordHandler = (e) => {\r\n        this.setState({ keyword: e.target.value });\r\n    }\r\n\r\n    searchHandler = () => {\r\n        let keyword = this.state.keyword\r\n        var url = `${API.zomato.baseUrl}/cities`\r\n        axios.get(url, {\r\n            headers: {\r\n                'user-key': `${API.zomato.api_key}`\r\n            },\r\n            params: {\r\n                q: keyword\r\n            }\r\n        })\r\n        .then(( {data}) => {\r\n            if (data.status === 'success') {\r\n                this.setState({ \r\n                    citiesResultSearch: data.location_suggestions, \r\n                    keyword:'',\r\n                    cityKeywordSearch: keyword\r\n                })\r\n            }\r\n        })\r\n        .catch( err => console.log(err))\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n        <>\r\n            <ImageAndWelcome />\r\n            {/* Start of container */}\r\n            <div className=\"container\" style={{marginTop:30, marginBottom:30}}>\r\n                <CityList \r\n                    title={'Featured Cities'} \r\n                    cities={this.state.featuredCities} \r\n                />\r\n                <SearchCity \r\n                    value={this.state.keyword} \r\n                    onChange={this.changeKeywordHandler} \r\n                    onClickSearch={this.searchHandler}\r\n                />\r\n                {\r\n                    this.state.cityKeywordSearch !== '' && (\r\n                        <CityList \r\n                            title={'Search Result'} \r\n                            showSubtitle={true}\r\n                            subTitle={this.state.cityKeywordSearch}\r\n                            cities={this.state.citiesResultSearch} \r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n            {/* End of Container */} \r\n        </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport './Footer.css' \r\n\r\nconst Footer = () => (\r\n    <footer className=\"my-footer\" >\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-4 text-center\">\r\n                    <h5>About FoodParadise</h5>\r\n                    <ul>\r\n                        <li><a href=\"/#\">About Us</a></li>\r\n                        <li><a href=\"/#\">Contact Us</a></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-sm-4 text-center\">\r\n                    <h5>Suport</h5>\r\n                    <ul>\r\n                        <li><a href=\"/#\">FAX</a></li>\r\n                        <li><a href=\"/#\">Help desak</a></li>\r\n                        <li><a href=\"/#\">Forums</a></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-sm-4 text-center\">\r\n                    <h5>Download App</h5>\r\n                    <ul>\r\n                        <li><a href=\"/#\">Google Play</a></li>\r\n                        <li><a href=\"/#\">App Store</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"social-networks\">\r\n            <a href=\"/#\" className=\"twitter\"><i className=\"fa fa-twitter\"></i></a>\r\n            <a href=\"/#\" className=\"facebook\"><i className=\"fa fa-facebook-official\"></i></a>\r\n            <a href=\"/#\" className=\"google\"><i className=\"fa fa-google-plus\"></i></a>\r\n        </div>\r\n        <div className=\"text-center footer-copyright\">\r\n            <p>Copyright &copy; 2020 FoodParadise</p>\r\n        </div>\r\n    </footer>\r\n\r\n)\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nconst RatingLabel = (props) => (\r\n    <div className=\"btn btn-sm\"\r\n                                      style={{\r\n                                        color: 'white',\r\n                                        backgroundColor: `#${props.labelColor}`,\r\n                                        borderColor: `#${props.labelColor}`,\r\n                                      }}\r\n                                  >\r\n                                      {props.text}\r\n    </div>\r\n)\r\n\r\nexport default RatingLabel","import React from 'react';\r\nimport RatingLabel from '../components/RatingLabel';\r\n\r\nconst RestaurantProfile =(props) => (\r\n    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <div className=\"row\">\r\n                            <div className=\"col\">\r\n                            { props.restaurant ? (\r\n                                <>\r\n                                    <h4 className=\"text-success\" style={{ fontWeight: 800 }}>{props.restaurant.name}</h4>\r\n                                    <h6 style={{ fontWeight: 600 }}>{props.restaurant.location.locality}</h6>\r\n                                    <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\r\n                                </>\r\n                            ) : (\r\n                                <p>Loading ...</p>\r\n                            )}\r\n                            </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            { props.restaurant ? (\r\n                            <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                                <img class=\"img-responsive\" src={props.restaurant.featured_image} alt=\"\" style={{ borderRadius: 5, width: 500 }} ></img>\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <table className=\"table\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>Rating</td>\r\n                                        <td>\r\n                                        <RatingLabel\r\n                                            labelColor={props.restaurant.user_rating.rating_color}\r\n                                            text={`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`}\r\n                                        />\r\n                                        <h6>{props.restaurant.user_rating.votes} Votes</h6>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td>Cuisines</td>\r\n                                    <td>\r\n                                        {props.restaurant.cuisines}\r\n                                    </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                    <td>Cost for two</td>\r\n                                    <td>\r\n                                        {props.restaurant.currency + ' ' + props.restaurant.average_cost_for_two}\r\n                                    </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                </table>\r\n                            </div>\r\n                            </div>\r\n                            ) : (\r\n                                <p> Loading ...</p>\r\n                            )}\r\n\r\n                        </div>\r\n                        </div>\r\n)\r\n\r\nexport default RestaurantProfile","import React from 'react';\r\nimport RatingLabel from '../components/RatingLabel'\r\n\r\nconst Review = (props) => (\r\n        <div className=\"card border-success\" style={{ marginBottom: 5 }}>\r\n          <div className=\"card-body\">\r\n            <div className=\"row\" style={{ marginBottom: 20 }}>\r\n              <div className=\"col-1\" style={{ border: '0px solid black' }}>\r\n                <img class=\"img-responsive\" src={props.review.user.profile_image} alt=\"\" style={{ borderRadius: '50%', width: 80 }}></img>\r\n              </div>\r\n              <div className=\"col-11\" style={{ border: '0px solid black' }}>\r\n                <h6 className=\"font-weight-bold\">{props.review.user.name}</h6>\r\n                <RatingLabel\r\n                  text={`${props.review.user.foodie_level_num} (${props.review.user.foodie_level})`}\r\n                  labelColor={`${props.review.user.foodie_color}`}\r\n                />\r\n              </div>\r\n            </div>\r\n            <h6 className=\"card-text text-muted\">{props.review.review_time_friendly}</h6>\r\n            <RatingLabel\r\n              text={`${props.review.rating} (${props.review.rating_text})`}\r\n              labelColor={`${props.review.rating_color}`}\r\n            />\r\n            <p className=\"card-text\">{props.review.review_text}</p>\r\n          </div>\r\n        </div>\r\n                                            \r\n)\r\n\r\nexport default Review","import React, { Component } from 'react';\r\nimport { API } from '../config/api'\r\nimport Axios from 'axios';\r\n//import RatingLabel from '../components/RatingLabel'\r\nimport RestaurantProfile from '../components/RestaurantProfile';\r\nimport Review from '../components/Review';\r\n\r\nclass RestaurantDetail extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            restaurant: null,\r\n            reviews: null\r\n        }\r\n    }\r\n\r\n    getRestaurantData = (restaurant_id) => {\r\n        let url = `${API.zomato.baseUrl}/restaurant`\r\n        Axios.get(url, {\r\n            headers: {\r\n                'user-key' : `${API.zomato.api_key}`\r\n            },\r\n            params: {\r\n                res_id: restaurant_id\r\n            }\r\n        })\r\n        .then(({ data }) => {\r\n            this.setState({ restaurant: data })\r\n        })\r\n        .catch(err=>console.log.apply(err))\r\n    }\r\n\r\n    getReviwesData = (restaurant_id) => {\r\n        let url = `${API.zomato.baseUrl}/reviews`\r\n        Axios.get(url, {\r\n            headers: {\r\n                'user-key' : `${API.zomato.api_key}`\r\n            },\r\n            params: {\r\n                res_id: restaurant_id\r\n            }\r\n        })\r\n        .then(({ data }) => {\r\n            this.setState({reviews : data.user_reviews })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { params } = this.props.match\r\n        this.getRestaurantData(params.restaurant_id)\r\n        this.getReviwesData(params.restaurant_id)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\" style={{ margintop: 30, marginBottom:30}}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\" style={{marginBottom:20}}>\r\n                        <RestaurantProfile \r\n                            restaurant={this.state.restaurant}\r\n                        />\r\n\r\n                        <div className=\"col-12\" style={{marginBottom:20}}>\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <h4 className=\"text-success\" style={{fontWeight:800}}>Review</h4>\r\n\r\n                                    { this.state.reviews ? (\r\n                                        this.state.reviews.map(({ review }) => (\r\n\r\n                                            <Review \r\n                                                key={review.id}\r\n                                                review={review}\r\n                                            />\r\n                                            \r\n                                        ))\r\n                                    ) : (\r\n                                        <p>Loading...</p>\r\n                                    )}\r\n\r\n                                    \r\n   \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RestaurantDetail ","import React from 'react'\r\n\r\nconst CategoryList = (props) => (\r\n    props.categories ? (\r\n      <div className=\"list-group\">\r\n        {props.categories.map(category => (\r\n          <button\r\n            key={category.id}\r\n            className={'list-group-item list-group-item-action ' + (props.categorySelected && category.id === props.categorySelected.id ? 'active' : '')}\r\n            onClick={() => props.categoryClickHandler(category)}\r\n          >\r\n            {category.name}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    ) : (\r\n      <p>Loading....</p>\r\n    )\r\n)\r\n\r\nexport default CategoryList","import React  from 'react'\r\n\r\nconst SearchKeyword = (props) => (\r\n    <>\r\n        <h5>Keyword</h5>    \r\n                <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                    <div className=\"form-row\">\r\n                        <div className=\"col-10\">\r\n                        <input \r\n                                className=\"form-control\"\r\n                                type=\"text\"\r\n                                placeholder=\"Type keyword i.e : restaurant's name, location, cuisine, etc.\"\r\n                                value={props.keyword}\r\n                                onChange={props.onchange}\r\n                        />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <button\r\n                                className=\"btn btn-primary\"\r\n                                type=\"button\"\r\n                                onClick={props.onClickAddToCriteria}\r\n                            >Add to Criteria</button>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n)\r\n\r\nexport default SearchKeyword","import React from 'react';\r\n\r\nconst SearchCriteria = (props) => (\r\n        <div className=\"card bg-light mb3\" style={{marginTop:20}}>\r\n                  <div className=\"card-body\">\r\n                    <p className=\"card-title\">Find Restauran</p>\r\n                    <table className=\"table table-hover\">\r\n                      <tbody>\r\n                        {props.criteria.map((cri, index) => (\r\n                          <tr key={index} className=\"table-active\">\r\n                            <td width=\"40%\">{cri.criteriaName}</td>\r\n                            <td width=\"50%\">{cri.data.name}</td>\r\n                            <td>\r\n                              {cri.criteriaName !== 'City' && (\r\n                                <i\r\n                                  className=\"fa fa-times\"\r\n                                  aria-hidden=\"true\"\r\n                                  style={{color:'red'}} \r\n                                  onClick={ () => props.removeCriteriaHandler(index)}\r\n                                ></i>\r\n                              )} \r\n                            </td>\r\n                          </tr>\r\n                        ))}\r\n                      </tbody>\r\n                    </table>\r\n                    \r\n                    <div className=\"pull-right\">\r\n                      <button\r\n                        className=\"btn btn-primary\"\r\n                        type=\"button\"\r\n                        onClick={props.onClickSearch}\r\n                      >\r\n                        Search\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n)\r\n\r\nexport default SearchCriteria","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport RatingLabel from './RatingLabel';\r\n\r\n\r\n\r\nconst RestaurantCard = (props) => (\r\n\r\n                      <div className=\"col-6\" style={{ marginBottom: 20 }}>\r\n                      <div className=\"card\">\r\n                          <div className=\"card-header\">\r\n                          <div className=\"row\">\r\n                              <div className=\"col-3\">\r\n                              <img className=\"img-responsive\" src={props.restaurant.thumb} alt=\"\" style={{ borderRadius: 5, width: 100 }} ></img>\r\n                              </div>\r\n                              <div className=\"col-9\">\r\n                              <h4 className=\"text-success\" style={{ fontWeight: 800 }}>{props.restaurant.name}</h4>\r\n                              <h6>{props.restaurant.location.locality}</h6>\r\n                              <h6 className=\"text-muted\">{props.restaurant.location.address}</h6>\r\n                              </div>\r\n                          </div>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                          <table className=\"table\">\r\n                              <tbody>\r\n                              <tr>\r\n                                  <td>Rating</td>\r\n                                  <td>\r\n                                    <RatingLabel   \r\n                                        labelColor={props.restaurant.user_rating.rating_color}\r\n                                        text={`${props.restaurant.user_rating.aggregate_rating} (${props.restaurant.user_rating.rating_text})`} \r\n                                    />\r\n                                  </td>\r\n                              </tr>\r\n                              <tr>\r\n                                  <td>Cuisines</td>\r\n                                  <td>\r\n                                  {props.restaurant.cuisines}\r\n                                  </td>\r\n                              </tr>\r\n                              <tr>\r\n                                  <td>Cost for two</td>\r\n                                  <td>\r\n                                  {props.restaurant.currency + ' ' + props.restaurant.average_cost_for_two}\r\n                                  </td>\r\n                              </tr>\r\n                              </tbody>\r\n                          </table>\r\n\r\n                          </div>\r\n                          <div className=\"card-footer\">\r\n                          <Link to={`/restaurant/${props.restaurant.id}`} style={{ textDecoration: 'none' }}>\r\n                              <button type=\"button\" className=\"btn btn-outline-success btn-block\">\r\n                              View Restaurant Details\r\n                              </button>\r\n                          </Link>\r\n                          </div>\r\n                      </div>\r\n                      </div>\r\n                  \r\n)\r\n\r\nexport default RestaurantCard\r\n","import React, { Component } from 'react';\r\nimport CategoryList from '../components/CategoryList';\r\nimport SearchKeyword from '../components/SearchKeyword';\r\nimport SearchCriteria from '../components/SearchCriteria';\r\nimport axios from 'axios';\r\nimport { API } from '../config/api';\r\nimport RestaurantCard from '../components/RestaurantCard';\r\n\r\n\r\n\r\n  /*const restaurants = [\r\n    {\r\n      \"restaurant\": {\r\n        \"id\": \"18875696\",\r\n        \"name\": \"Kintaro Sushi\",\r\n        \"location\": {\r\n          \"address\": \"Jl. Suryo No. 20, Senopati, Jakarta\",\r\n          \"locality\": \"Senopati\",\r\n        },\r\n        \"cuisines\": \"Sushi, Japanese\",\r\n        \"average_cost_for_two\": 200000,\r\n        \"currency\": \"IDR\",\r\n        \"thumb\": \"https://b.zmtcdn.com/data/pictures/chains/5/18530405/0feeddcbe877a8e27526a8cf5b501edf.jpg?fit=around%7C200%3A200&crop=200%3A200%3B%2A%2C%2A\",\r\n        \"user_rating\": {\r\n          \"aggregate_rating\": \"4.9\",\r\n          \"rating_text\": \"Excellent\",\r\n          \"rating_color\": \"3F7E00\",\r\n          \"votes\": \"1358\"\r\n        },\r\n      }\r\n    },\r\n    {\r\n      \"restaurant\": {\r\n        \"id\": \"18875696\",\r\n        \"name\": \"Kintaro Sushi\",\r\n        \"location\": {\r\n          \"address\": \"Jl. Suryo No. 20, Senopati, Jakarta\",\r\n          \"locality\": \"Senopati\",\r\n        },\r\n        \"cuisines\": \"Sushi, Japanese\",\r\n        \"average_cost_for_two\": 200000,\r\n        \"currency\": \"IDR\",\r\n        \"thumb\": \"https://b.zmtcdn.com/data/pictures/chains/5/18530405/0feeddcbe877a8e27526a8cf5b501edf.jpg?fit=around%7C200%3A200&crop=200%3A200%3B%2A%2C%2A\",\r\n        \"user_rating\": {\r\n          \"aggregate_rating\": \"4.9\",\r\n          \"rating_text\": \"Excellent\",\r\n          \"rating_color\": \"3F7E00\",\r\n          \"votes\": \"1358\"\r\n        },\r\n      }\r\n    }\r\n  ]*/\r\n\r\nclass City extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            city: null,\r\n            categories: null,\r\n            categorySelected: null,\r\n            keyword:'',\r\n            criteria:[],\r\n            restaurants: []\r\n        }\r\n    }\r\n\r\n    changeKeywordHandler = (e) => {\r\n        this.setState({ keyword: e.target.value })\r\n    }\r\n\r\n    categoryClickHandler = (category) => {\r\n      let criteria = [...this.state.criteria]\r\n      //ambil element citeria\r\n      criteria = criteria.filter(cri=> cri.criteriaName !== 'Category')\r\n      let newCriteria = {\r\n        criteriaName: 'Category',\r\n        data: category\r\n      }\r\n      criteria.push(newCriteria)\r\n      this.setState({categorySelected: category, criteria })\r\n    }\r\n\r\n    transformCategoriesData(categories) {\r\n        let categoriesTransformed = categories.map(category => { \r\n          return category.categories\r\n        })\r\n    \r\n        return categoriesTransformed\r\n    }\r\n\r\n    addToCriteriaHandler = () => {\r\n      let criteria = [...this.state.criteria]\r\n      criteria = criteria.filter(cri => cri.criteriaName !== 'Keyword')\r\n      let newCriteria = {\r\n        criteriaName: 'Keyword',\r\n        data: {\r\n          name: this.state.keyword\r\n        }\r\n      }\r\n\r\n      criteria.push(newCriteria)\r\n      this.setState({ keyword: '', criteria})\r\n    }\r\n\r\n    removeCriteriaHandler = (index) => {\r\n      let criteria = [...this.state.criteria]\r\n      criteria.splice(index,1)\r\n      this.setState({ criteria })\r\n    }\r\n\r\n    searchHandler = () => {\r\n      this.setState({ restaurant: null })\r\n      let url = `${API.zomato.baseUrl}/search`\r\n      let params = {}\r\n\r\n      for (let cri of this.state.criteria) {\r\n        switch (cri.criteriaName){\r\n          case 'City':\r\n            params.entity_id = cri.data.id\r\n            params.entity_type = 'city'\r\n            break\r\n          case 'Category':\r\n            params.category = cri.data.id\r\n            break\r\n          case 'Keyword':\r\n            params.q = cri.data.name\r\n            break\r\n          default : break\r\n        }\r\n      }\r\n\r\n      axios.get(url, {\r\n        headers: {\r\n          'user-key': `${API.zomato.api_key}`\r\n        },\r\n        params\r\n      })\r\n      .then(( { data }) => {\r\n        this.setState({ restaurants : data.restaurants })\r\n      })\r\n      .catch(err => console.log(err))\r\n    }\r\n\r\n    renderRestaurantList = () => {\r\n      if(this.state.restaurants == null) {\r\n        return (\r\n          <div className=\"col\">\r\n            <p>Loading...</p> \r\n          </div>\r\n        )\r\n      }\r\n  \r\n      if(this.state.restaurants.length > 0) {\r\n        return (\r\n          this.state.restaurants.map(({ restaurant }) => (\r\n            <RestaurantCard key={restaurant.id} restaurant={restaurant} />\r\n          ))\r\n        )\r\n      } else {\r\n        return (\r\n          <div className=\"col\">\r\n            <p>No Data available. Please select criteria, and click Search</p>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // cara mendapatkan parameter city_id dari url / route\r\n        let { city_id } = this.props.match.params\r\n        this.getCityData(city_id)\r\n        \r\n        this.getCategoriesData()\r\n    }\r\n\r\n    getCategoriesData = () => {\r\n      let url = `${API.zomato.baseUrl}/categories`\r\n      axios.get( url, {\r\n        headers: {\r\n          'user-key': `${API.zomato.api_key}`\r\n        }\r\n      })\r\n      .then(( {data} ) => {\r\n        //let categories = [...this.state.categories]\r\n        // proses transform data categories\r\n        let categories = this.transformCategoriesData(data.categories)\r\n        this.setState({ categories })\r\n      })\r\n      .catch(err=> console.log(err))\r\n    }\r\n\r\n    getCityData = (city_id) => {\r\n        let url = `${API.zomato.baseUrl}/cities`\r\n        axios.get(url, {\r\n            headers: {\r\n                'user-key' : `${API.zomato.api_key}`\r\n            },\r\n            params: {\r\n                city_ids: `${city_id}`\r\n            }\r\n        })\r\n        .then(( { data })=>{\r\n            console.log(\"succes\")\r\n            let city = data.location_suggestions[0]\r\n            let newCriteria = {\r\n              criteriaName: 'City',\r\n              data: city\r\n            }\r\n            let criteria =[...this.state.criteria]\r\n            criteria.push(newCriteria)\r\n            this.setState({ city, criteria })\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    render(){\r\n    return (\r\n      <div className=\"container-fluid\" style={{ marginTop: 30, marginBottom: 30 }}>\r\n        { this.state.city && (\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <h4 className=\"text-success\">\r\n                Restaurant in { this.state.city.name }, { this.state.city.country_name }\r\n              </h4>\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"row\">\r\n            <div className=\"col-3\">\r\n                <h5>Categories</h5>\r\n                <CategoryList \r\n                    categories={this.state.categories}\r\n                    categorySelected={this.state.categorySelected}\r\n                    categoryClickHandler={(category) => this.categoryClickHandler(category)}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"col\">\r\n                <SearchKeyword\r\n                  keyword={this.state.keyword}\r\n                  onchange={this.changeKeywordHandler}\r\n                  onClickAddToCriteria={this.addToCriteriaHandler}\r\n                />\r\n\r\n                <SearchCriteria \r\n                  criteria={this.state.criteria}\r\n                  removeCriteriaHandler={(index) => this.removeCriteriaHandler(index)}\r\n                  onClickSearch={this.searchHandler}\r\n                />\r\n\r\n                <div className=\"row\">\r\n                  <div className=\"col\" style={{ marginTop:10, marginBottom:10 }}>\r\n                    <h4 className=\"text-success\">Restauran</h4>\r\n                  </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                  {this.renderRestaurantList()}\r\n                </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default City \r\n","import React, { Component } from 'react'; \nimport { BrowserRouter  as Router, Route } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './pages/Home';\nimport Footer from './components/Footer/Footer';\nimport RestaurantDetail from './pages/RestaurantDetail'\nimport City from './pages/City';\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Router>\n        <Navbar />\n        <Route path=\"/\" exact component={Home}></Route>\n        <Route path=\"/city/:city_id\" component={City}></Route>\n        <Route path=\"/restaurant/:restaurant_id\" component={RestaurantDetail}></Route>\n        <Footer />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nrequire('dotenv').config()\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}